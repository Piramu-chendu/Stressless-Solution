{"ast":null,"code":"var _jsxFileName = \"C:\\\\MHP\\\\new-mhapp\\\\frontend\\\\src\\\\components\\\\Journal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Journal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Journal = () => {\n  _s();\n  const [entries, setEntries] = useState([]);\n  const [entry, setEntry] = useState('');\n  useEffect(() => {\n    // Fetch existing journal entries from the backend\n    const fetchEntries = async () => {\n      try {\n        const response = await fetch('/api/journal');\n        const data = await response.json();\n        setEntries(data);\n      } catch (error) {\n        console.error('Error fetching entries:', error);\n      }\n    };\n    fetchEntries();\n  }, []);\n  const handleEntryChange = e => {\n    setEntry(e.target.value);\n    // Adjust the height of the textarea\n    e.target.style.height = 'auto';\n    e.target.style.height = `${e.target.scrollHeight}px`;\n  };\n  const handleAddEntry = async () => {\n    if (entry) {\n      try {\n        const response = await fetch('/api/journal/add', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            content: entry\n          })\n        });\n        const newEntry = await response.json();\n        setEntries([...entries, newEntry]); // Add the new entry to the state\n        setEntry(''); // Reset input field\n      } catch (error) {\n        console.error('Error adding entry:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"journal-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Journal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: entry,\n      onChange: handleEntryChange,\n      placeholder: \"Write about your day or feelings...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddEntry,\n      children: \"Add Entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"journal-entries\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Journal Entries:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), entries.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No entries yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: entries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: entry.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Journal, \"r699WTJ0aoHfbSKjGFh5fq9OICI=\");\n_c = Journal;\nexport default Journal;\nvar _c;\n$RefreshReg$(_c, \"Journal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Journal","_s","entries","setEntries","entry","setEntry","fetchEntries","response","fetch","data","json","error","console","handleEntryChange","e","target","value","style","height","scrollHeight","handleAddEntry","method","headers","body","JSON","stringify","content","newEntry","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","onClick","length","map","index","_c","$RefreshReg$"],"sources":["C:/MHP/new-mhapp/frontend/src/components/Journal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Journal.css';\r\n\r\nconst Journal = () => {\r\n    const [entries, setEntries] = useState([]);\r\n    const [entry, setEntry] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Fetch existing journal entries from the backend\r\n        const fetchEntries = async () => {\r\n            try {\r\n                const response = await fetch('/api/journal');\r\n                const data = await response.json();\r\n                setEntries(data);\r\n            } catch (error) {\r\n                console.error('Error fetching entries:', error);\r\n            }\r\n        };\r\n\r\n        fetchEntries();\r\n    }, []);\r\n\r\n    const handleEntryChange = (e) => {\r\n        setEntry(e.target.value);\r\n        // Adjust the height of the textarea\r\n        e.target.style.height = 'auto';\r\n        e.target.style.height = `${e.target.scrollHeight}px`;\r\n    };\r\n\r\n    const handleAddEntry = async () => {\r\n        if (entry) {\r\n            try {\r\n                const response = await fetch('/api/journal/add', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({ content: entry }),\r\n                });\r\n                const newEntry = await response.json();\r\n                setEntries([...entries, newEntry]); // Add the new entry to the state\r\n                setEntry(''); // Reset input field\r\n            } catch (error) {\r\n                console.error('Error adding entry:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"journal-container\">\r\n            <center><h2>Journal</h2></center>\r\n            <textarea\r\n                value={entry}\r\n                onChange={handleEntryChange}\r\n                placeholder=\"Write about your day or feelings...\"\r\n            ></textarea>\r\n            <button onClick={handleAddEntry}>Add Entry</button>\r\n            <div className=\"journal-entries\">\r\n                <h3>Your Journal Entries:</h3>\r\n                {entries.length === 0 ? (\r\n                    <p>No entries yet.</p>\r\n                ) : (\r\n                    <ul>\r\n                        {entries.map((entry, index) => (\r\n                            <li key={index}>{entry.content}</li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Journal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}