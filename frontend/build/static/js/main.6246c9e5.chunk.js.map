{"version":3,"sources":["components/Header.js","components/Questionnaire.js","components/Results.js","components/Journal.js","components/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","showHeader","setShowHeader","useState","activeLink","setActiveLink","useEffect","timer","setTimeout","clearTimeout","handleLinkClick","link","_jsx","className","children","_jsxs","src","alt","Link","to","onClick","Questionnaire","answers","setAnswers","mood","sleep","energy","appetite","interest","irritability","concentration","feelingWorthy","anxiousThoughts","panicAttacks","navigate","useNavigate","handleChange","e","target","name","value","getStressScore","score","getAnxietyScore","getDepressionScore","onSubmit","async","preventDefault","console","log","scores","stressScore","anxietyScore","depressionScore","stress","anxiety","depression","calculateScores","response","axios","post","data","state","error","onChange","required","type","Results","location","useLocation","getResultMessage","stressLevel","anxietyLevel","depressionLevel","getFinalSolutionFromAnswers","totalYesAnswers","Object","values","filter","answer","length","Journal","entries","setEntries","entry","setEntry","message","setMessage","get","fetchEntries","content","status","newEntry","style","height","scrollHeight","placeholder","rows","map","index","ToDoList","tasks","setTasks","task","setTask","handleAddTask","newTasks","_","i","handleDeleteTask","App","results","setResults","Router","Routes","Route","path","element","component","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.6246c9e5.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    const [showHeader, setShowHeader] = useState(false);\r\n    const [activeLink, setActiveLink] = useState(''); // State to track the active link\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setShowHeader(true);\r\n        }, 100); // Delay to show the header\r\n\r\n        return () => clearTimeout(timer); // Cleanup on unmount\r\n    }, []);\r\n\r\n    const handleLinkClick = (link) => {\r\n        setActiveLink(link); // Set the clicked link as active\r\n    };\r\n\r\n    return (\r\n        <header className={`header ${showHeader ? 'show' : ''}`}>\r\n            <div className=\"header-container\">\r\n                <div className=\"logo\">\r\n                    <img src='./flogo.png' alt=\"Logo\" className=\"logo-image\" />\r\n                </div>\r\n                <nav className=\"navbar\">\r\n                    <ul className=\"nav-links\">\r\n                        <li>\r\n                            <Link\r\n                                to=\"/questionnaire\"\r\n                                className={activeLink === 'questionnaire' ? 'active' : ''}\r\n                                onClick={() => handleLinkClick('questionnaire')}\r\n                            >\r\n                                Questionnaire\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link\r\n                                to=\"/journal\"\r\n                                className={activeLink === 'journal' ? 'active' : ''}\r\n                                onClick={() => handleLinkClick('journal')}\r\n                            >\r\n                                Journal\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link\r\n                                to=\"/todolist\"\r\n                                className={activeLink === 'todolist' ? 'active' : ''}\r\n                                onClick={() => handleLinkClick('todolist')}\r\n                            >\r\n                                To Do List\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react'; // Import React and hooks\r\nimport axios from 'axios'; // Import Axios\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for navigation\r\nimport './Questionnaire.css';\r\n\r\nconst Questionnaire = () => {\r\n    const [answers, setAnswers] = useState({\r\n        mood: '',\r\n        sleep: '',\r\n        energy: '',\r\n        appetite: '',\r\n        interest: '',\r\n        irritability: '',\r\n        concentration: '',\r\n        feelingWorthy: '',\r\n        anxiousThoughts: '',\r\n        panicAttacks: ''\r\n    });\r\n\r\n    const navigate = useNavigate(); // Initialize navigate for navigation\r\n\r\n    const handleChange = (e) => {\r\n        setAnswers({ ...answers, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const calculateScores = (answers) => {\r\n        let stressScore = getStressScore(answers);\r\n        let anxietyScore = getAnxietyScore(answers);\r\n        let depressionScore = getDepressionScore(answers);\r\n\r\n        const stressLevel = stressScore > 5 ? 'High' : stressScore > 2 ? 'Moderate' : 'Low';\r\n        const anxietyLevel = anxietyScore > 5 ? 'High' : anxietyScore > 2 ? 'Moderate' : 'Low';\r\n        const depressionLevel = depressionScore > 5 ? 'High' : depressionScore > 2 ? 'Moderate' : 'Low';\r\n\r\n        return {\r\n            stress: stressLevel,\r\n            anxiety: anxietyLevel,\r\n            depression: depressionLevel,\r\n        };\r\n    };\r\n\r\n    const getStressScore = (answers) => {\r\n        let score = 0;\r\n        score += (answers.mood === 'Very Low' ? 3 : answers.mood === 'Low' ? 2 : answers.mood === 'Neutral' ? 1 : 0);\r\n        score += (answers.sleep === 'Very Poor' ? 3 : answers.sleep === 'Poor' ? 2 : answers.sleep === 'Neutral' ? 1 : 0);\r\n        return score;\r\n    };\r\n\r\n    const getAnxietyScore = (answers) => {\r\n        let score = 0;\r\n        score += (answers.anxiousThoughts === 'Very Often' ? 3 : answers.anxiousThoughts === 'Sometimes' ? 2 : answers.anxiousThoughts === 'Rarely' ? 1 : 0);\r\n        score += (answers.panicAttacks === 'Yes' ? 3 : 0);\r\n        return score;\r\n    };\r\n\r\n    const getDepressionScore = (answers) => {\r\n        let score = 0;\r\n        score += (answers.interest === 'Yes, Completely' ? 3 : answers.interest === 'Somewhat' ? 2 : 0);\r\n        score += (answers.feelingWorthy === 'Very Often' ? 3 : answers.feelingWorthy === 'Sometimes' ? 2 : 0);\r\n        return score;\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); // Prevent default form submission behavior\r\n        console.log(\"Submit button clicked!\"); // Log for debugging\r\n        \r\n        const scores = calculateScores(answers); // Calculate scores based on answers\r\n        console.log(\"Scores calculated:\", scores); // Log the calculated scores\r\n        \r\n        // Submit user responses and calculated scores to the backend\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/questionnaire', {\r\n                answers,\r\n                scores // Send answers and scores to backend\r\n            });\r\n            console.log(\"Submission successful:\", response.data); // Log successful submission\r\n            \r\n            // Redirect to the results page after successful submission, passing the scores\r\n            navigate('/results', { state: scores }); // Pass scores as state\r\n        } catch (error) {\r\n            console.error('Submission failed:', error); // Log error message\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"questionnaire-container\">\r\n            <center><h2>Mental Health Questionnaire</h2></center>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-field\">\r\n                    <label>How would you rate your overall mood in the past week?</label>\r\n                    <select name=\"mood\" value={answers.mood} onChange={handleChange} required>\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Very Low\">Very Low</option>\r\n                        <option value=\"Low\">Low</option>\r\n                        <option value=\"Neutral\">Neutral</option>\r\n                        <option value=\"Good\">Good</option>\r\n                        <option value=\"Very Good\">Very Good</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <label>How has your sleep been over the past week?</label>\r\n                    <select name=\"sleep\" value={answers.sleep} onChange={handleChange} required>\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Very Poor\">Very Poor</option>\r\n                        <option value=\"Poor\">Poor</option>\r\n                        <option value=\"Neutral\">Neutral</option>\r\n                        <option value=\"Good\">Good</option>\r\n                        <option value=\"Very Good\">Very Good</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <label>How would you describe your energy levels?</label>\r\n                    <select name=\"energy\" value={answers.energy} onChange={handleChange} required>\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Very Low\">Very Low</option>\r\n                        <option value=\"Low\">Low</option>\r\n                        <option value=\"Moderate\">Moderate</option>\r\n                        <option value=\"High\">High</option>\r\n                        <option value=\"Very High\">Very High</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <label>Have you noticed any changes in your appetite?</label>\r\n                    <select name=\"appetite\" value={answers.appetite} onChange={handleChange} required>\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Increased\">Increased</option>\r\n                        <option value=\"Decreased\">Decreased</option>\r\n                        <option value=\"Normal\">Normal</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <label>Have you lost interest in activities you usually enjoy?</label>\r\n                    <select name=\"interest\" value={answers.interest} onChange={handleChange} required>\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Yes, Completely\">Yes, Completely</option>\r\n                        <option value=\"Somewhat\">Somewhat</option>\r\n                        <option value=\"No, Not at All\">No, Not at All</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <label>How irritable have you felt recently?</label>\r\n                    <select name=\"irritability\" value={answers.irritability} onChange={handleChange} required>\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Very Irritable\">Very Irritable</option>\r\n                        <option value=\"Somewhat Irritable\">Somewhat Irritable</option>\r\n                        <option value=\"Not Irritable\">Not Irritable</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <label>How would you rate your ability to concentrate?</label>\r\n                    <select name=\"concentration\" value={answers.concentration} onChange={handleChange} required>\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Very Poor\">Very Poor</option>\r\n                        <option value=\"Poor\">Poor</option>\r\n                        <option value=\"Neutral\">Neutral</option>\r\n                        <option value=\"Good\">Good</option>\r\n                        <option value=\"Very Good\">Very Good</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <label>How often have you felt unworthy or excessively guilty?</label>\r\n                    <select name=\"feelingWorthy\" value={answers.feelingWorthy} onChange={handleChange} required>\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Very Often\">Very Often</option>\r\n                        <option value=\"Sometimes\">Sometimes</option>\r\n                        <option value=\"Rarely\">Rarely</option>\r\n                        <option value=\"Never\">Never</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <label>How often do you experience anxious thoughts?</label>\r\n                    <select name=\"anxiousThoughts\" value={answers.anxiousThoughts} onChange={handleChange} required>\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Very Often\">Very Often</option>\r\n                        <option value=\"Sometimes\">Sometimes</option>\r\n                        <option value=\"Rarely\">Rarely</option>\r\n                        <option value=\"Never\">Never</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"input-field\">\r\n                    <label>Have you experienced panic attacks?</label>\r\n                    <select name=\"panicAttacks\" value={answers.panicAttacks} onChange={handleChange} required>\r\n                        <option value=\"\">Select</option>\r\n                        <option value=\"Yes\">Yes</option>\r\n                        <option value=\"No\">No</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Questionnaire;\r\n","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './Results.css'; // Add styling for Results if needed\r\n\r\nconst Results = () => {\r\n    const location = useLocation();\r\n    const scores = location.state; // Access the passed scores from the Questionnaire component\r\n    const answers = location.state.answers; // Access the user's answers (assuming you also pass them)\r\n\r\n    const { stress, anxiety, depression } = scores;\r\n\r\n    // Function to analyze the user's answers and derive the final solution\r\n    const getFinalSolutionFromAnswers = () => {\r\n        // Add your logic to analyze the answers and provide appropriate solutions\r\n        const totalYesAnswers = Object.values(answers).filter(answer => answer === true).length;\r\n\r\n        if (totalYesAnswers > 6) {\r\n            return \"Your answers suggest that you may be experiencing significant levels of stress, anxiety, or depression. It’s important to consult a mental health professional for further guidance.\";\r\n        } else if (totalYesAnswers > 3) {\r\n            return \"Your answers indicate that you might be dealing with moderate mental health concerns. Engaging in regular relaxation techniques like meditation, exercise, and mindfulness can help. If symptoms persist, consider talking to a therapist.\";\r\n        } else {\r\n            return \"Based on your answers, you seem to be managing your mental health well. Continue maintaining a healthy lifestyle, staying socially connected, and practicing self-care routines.\";\r\n        }\r\n    };\r\n\r\n    // Function to get the result message based on score value\r\n    const getResultMessage = (score) => {\r\n        if (score > 5) {\r\n            return \"High\";\r\n        } else if (score > 2) {\r\n            return \"Moderate\";\r\n        } else {\r\n            return \"Low\";\r\n        }\r\n    };\r\n\r\n    const stressLevel = getResultMessage(stress);\r\n    const anxietyLevel = getResultMessage(anxiety);\r\n    const depressionLevel = getResultMessage(depression);\r\n\r\n    return (\r\n        <div className=\"results-container\">\r\n            <h2>Your Mental Health Results</h2>\r\n\r\n            {/* Display stress, anxiety, and depression levels */}\r\n            <p><strong>Stress Level:</strong> {stressLevel}</p>\r\n            <p><strong>Anxiety Level:</strong> {anxietyLevel}</p>\r\n            <p><strong>Depression Level:</strong> {depressionLevel}</p>\r\n\r\n            {/* Display final solution based on the user's answers in the questionnaire */}\r\n            <p><strong>Final Solution:</strong> {getFinalSolutionFromAnswers()}</p>\r\n\r\n            <p>\r\n                <strong>Note:</strong> If you feel that you need immediate help, please contact a mental health professional.\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Journal.css'; // Import the styling for the journal page\r\n\r\nconst Journal = () => {\r\n    const [entries, setEntries] = useState([]); // State to hold journal entries\r\n    const [entry, setEntry] = useState(''); // State for current entry input\r\n    const [message, setMessage] = useState(''); // State for success/error messages\r\n\r\n    // Fetch journal entries from the backend when the component mounts\r\n    useEffect(() => {\r\n        const fetchEntries = async () => {\r\n            try {\r\n                const response = await axios.get('/api/journal');\r\n                setEntries(response.data); // Assuming the response contains an array of journal entries\r\n            } catch (error) {\r\n                console.error('Error fetching entries:', error);\r\n                setMessage('Failed to load journal entries.');\r\n            }\r\n        };\r\n\r\n        fetchEntries();\r\n    }, []);\r\n\r\n    // Handle text area change and adjust its height dynamically\r\n    const handleEntryChange = (e) => {\r\n        setEntry(e.target.value);\r\n        // Dynamically adjust the height of the textarea based on the content\r\n        e.target.style.height = 'auto';\r\n        e.target.style.height = `${e.target.scrollHeight}px`;\r\n    };\r\n\r\n    // Handle form submission and add the new journal entry to the backend\r\n    const handleAddEntry = async (e) => {\r\n        e.preventDefault(); // Prevent form submission default behavior\r\n        if (entry) {\r\n            try {\r\n                const response = await axios.post('/api/journal/add', { content: entry });\r\n\r\n                if (response.status === 200) {\r\n                    const newEntry = response.data; // Assuming the response contains the newly added entry\r\n                    setEntries([...entries, newEntry]); // Update state with the new entry\r\n                    setEntry(''); // Clear the input field\r\n                    setMessage('Journal entry submitted successfully.');\r\n                } else {\r\n                    setMessage('Failed to add journal entry.');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error adding entry:', error);\r\n                setMessage('Failed to add journal entry. Please try again.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"journal-container\">\r\n            <center><h2>Journal</h2></center>\r\n            <form onSubmit={handleAddEntry} className=\"journal-form\">\r\n                <textarea\r\n                    value={entry}\r\n                    onChange={handleEntryChange}\r\n                    placeholder=\"Write about your day or feelings...\"\r\n                    rows=\"10\"\r\n                    required\r\n                ></textarea>\r\n                <button type=\"submit\" className=\"submit-button\">Add Entry</button>\r\n            </form>\r\n\r\n            {/* Display success or error message */}\r\n            {message && <p className=\"message\">{message}</p>}\r\n\r\n            <div className=\"journal-entries\">\r\n                <h3>Your Journal Entries:</h3>\r\n                {entries.length === 0 ? (\r\n                    <p>No entries yet.</p>\r\n                ) : (\r\n                    <ul>\r\n                        {entries.map((entry, index) => (\r\n                            <li key={index}>{entry.content}</li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Journal;\r\n","import React, { useState } from 'react';\r\nimport './ToDoList.css';\r\n\r\nconst ToDoList = () => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [task, setTask] = useState('');\r\n\r\n    const handleTaskChange = (e) => {\r\n        setTask(e.target.value);\r\n    };\r\n\r\n    const handleAddTask = () => {\r\n        if (task) {\r\n            setTasks([...tasks, task]);\r\n            setTask('');\r\n        }\r\n    };\r\n\r\n    const handleDeleteTask = (index) => {\r\n        const newTasks = tasks.filter((_, i) => i !== index);\r\n        setTasks(newTasks);\r\n    };\r\n\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <center><h2>To-Do List</h2></center>\r\n            <div className=\"input-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={task}\r\n                    onChange={handleTaskChange}\r\n                    placeholder=\"Add a new task...\"\r\n                />\r\n                <button onClick={handleAddTask}>Add Task</button>\r\n            </div>\r\n            <div className=\"task-list\">\r\n                <h3>Your Tasks:</h3>\r\n                {tasks.length === 0 ? (\r\n                    <p>No tasks yet.</p>\r\n                ) : (\r\n                    <ul>\r\n                        {tasks.map((task, index) => (\r\n                            <li key={index}>\r\n                                {task}\r\n                                <button onClick={() => handleDeleteTask(index)}>Delete</button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDoList;\r\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Header from '../../../new-mhapp/frontend/src/components/Header';\nimport Questionnaire from '../../../new-mhapp/frontend/src/components/Questionnaire';\nimport Results from '../../../new-mhapp/frontend/src/components/Results';\nimport Journal from '../../../new-mhapp/frontend/src/components/Journal';\nimport ToDoList from '../../../new-mhapp/frontend/src/components/ToDoList';\nimport './App.css';\n\nfunction App() {\n    const [results, setResults] = useState(null);\n\n    const handleQuestionnaireSubmit = (answers) => {\n        const scores = calculateScores(answers);\n        setResults(scores);\n    };\n\n    const calculateScores = (answers) => {\n        let stressScore = 0;\n        let depressionScore = 0;\n        let anxietyScore = 0;\n\n        // Calculate stress score based on user responses\n        stressScore += (answers.mood === 'Very Low' ? 3 : answers.mood === 'Low' ? 2 : answers.mood === 'Neutral' ? 1 : 0);\n        stressScore += (answers.sleep === 'Very Poor' ? 3 : answers.sleep === 'Poor' ? 2 : answers.sleep === 'Neutral' ? 1 : 0);\n        stressScore += (answers.energy === 'Very Low' ? 3 : answers.energy === 'Low' ? 2 : answers.energy === 'Moderate' ? 1 : 0);\n\n        // Calculate anxiety score based on user responses\n        anxietyScore += (answers.anxiousThoughts === 'Very Often' ? 3 : answers.anxiousThoughts === 'Sometimes' ? 2 : answers.anxiousThoughts === 'Rarely' ? 1 : 0);\n        anxietyScore += (answers.panicAttacks === 'Yes' ? 3 : 0);\n\n        // Calculate depression score based on user responses\n        depressionScore += (answers.interest === 'Yes, Completely' ? 3 : answers.interest === 'Somewhat' ? 2 : 0);\n        depressionScore += (answers.feelingWorthy === 'Very Often' ? 3 : answers.feelingWorthy === 'Sometimes' ? 2 : 0);\n\n        return { stressScore, depressionScore, anxietyScore };\n    };\n\n    return (\n        <Router>\n            <div className=\"app-container\">\n                <Header />\n                <Routes>\n                    <Route\n                        path=\"/questionnaire\"\n                        element={!results ? <Questionnaire onSubmit={handleQuestionnaireSubmit} /> : <Results scores={results} />}\n                    />\n                    <Route path=\"/results\" component={<Results />} />\n                    <Route path=\"/journal\" element={<Journal />} />\n                    <Route path=\"/todolist\" element={<ToDoList />} />\n                </Routes>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals'; // Adjusted this line\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}